{"version":3,"sources":["redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","redux/types.js","redux/actions/userActions.js","redux/actions/dataActions.js","util/MyButton.js","components/scream/DeleteScream.js","components/scream/LikeButton.js","components/scream/Comment.js","components/scream/CommentForm.js","components/scream/ScreamDialog.js","components/scream/Scream.js","components/profile/EditDetails.js","util/ProfileSkeleton.js","components/profile/Profile.js","util/ScreamSkeleton.js","pages/home.js","pages/login.js","pages/signup.js","components/profile/StaticProfile.js","pages/user.js","components/layout/Notifications.js","components/scream/PostScream.js","components/layout/Navbar.js","util/AuthRoute.js","App.js","util/theme.js","serviceWorker.js","index.js","images/no-img.png","images/logo.jpg"],"names":["initialState","authenticated","loading","credentials","likes","notifications","screams","scream","errors","middleWare","thunk","reducers","combineReducers","user","state","action","type","payload","userHandle","handle","screamId","filter","like","forEach","n","read","data","index","findIndex","comments","UI","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","logoutUser","dispatch","localStorage","removeItem","axios","defaults","headers","common","getUserData","get","then","res","catch","err","console","log","setAuthHeader","token","FBIdToken","setItem","clearErrors","children","onClick","btnClassName","tipClassName","tip","Tooltip","title","className","placement","IconButton","DeleteScream","open","handleOpen","setState","handleClose","deleteScream","props","classes","this","MyButton","deleteButton","DeleteOutline","color","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogActions","Button","Component","mapActionsToProps","delete","connect","withStyles","left","top","position","LikeButton","likedScream","find","likeScream","unlikeScream","Favorite","FavoriteBorder","to","Comments","Grid","container","map","comment","body","createdAt","userImgUrl","key","item","sm","src","commentImage","alt","commentData","Typography","variant","component","Link","dayjs","format","invisibleSeparator","length","visibleSeparator","theme","styles","width","height","objectFit","borderRadius","marginLeft","CommentForm","handleChange","e","target","name","value","handleSubmit","preventDefault","submitComment","nextProps","style","textAlign","onSubmit","TextField","label","error","helperText","onChange","textField","button","post","response","ScreamDialog","oldPath","newPath","location","pathname","history","pushState","getScream","openDialog","likeCount","commentCount","dialogMarkup","spinnerDiv","CircularProgress","thickness","size","spacing","profileImage","Chat","Comment","expandButton","UnfoldMore","closeButton","Close","DialogContent","dialogContent","padding","margin","Scream","extend","relativeTime","Card","card","CardMedia","image","CardContent","content","fromNow","display","marginBottom","minWidth","EditDetails","bio","website","mapUserDetailsToState","userDetails","editUserDetails","Edit","multiline","rows","placeholder","float","backgroundColor","palette","primary","main","fullLine","Paper","paper","profile","NoImg","LocationOn","CalendarToday","Profile","handleImageChange","files","formData","FormData","append","uploadImage","handleEditPicture","document","getElementById","click","handleLogout","imgUrl","id","hidden","href","rel","KeyboardReturn","align","buttons","cardContent","flexDirection","cover","date","halfLine","Array","from","i","Math","random","home","getScreams","recentScreamsMarkup","xs","login","userData","email","password","loginUser","form","Logo","pageTitle","noValidate","general","customError","disabled","progress","push","ERD","signup","newUserData","confirmPassword","signupUser","screamIdParam","match","params","screamsMarkup","Notifications","anchorEl","onMenuOpened","unreadNotificationIds","notificationId","markNotificationsRead","notificationsIcon","Badge","badgeContent","notificationsMarkUp","verb","time","iconColor","icon","marginRight","MenuItem","recipient","sender","aria-owns","undefined","aria-haspopup","Menu","Boolean","onEntered","notificationIds","PostScream","newScream","postScream","Add","submitButton","progressSpinner","marginTop","Navbar","AppBar","Toolbar","Home","rest","render","createMuiTheme","light","dark","contrastText","secondary","verticalAlign","border","cursor","fontSize","fontWeight","borderBottom","Axios","baseURL","jwtDecode","exp","Date","now","App","exact","path","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d776073d.chunk.js","sourcesContent":["import {\r\n  SET_USER,\r\n  SET_AUTHENTICATED,\r\n  SET_UNAUTHENTICATED,\r\n  LOADING_USER,\r\n  LIKE_SCREAM,\r\n  UNLIKE_SCREAM,\r\n  MARK_NOTIFICATIONS_READ\r\n} from \"../types\";\r\nconst initialState = {\r\n  authenticated: false,\r\n  loading: false,\r\n  credentials: {},\r\n  likes: [],\r\n  notifications: []\r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_AUTHENTICATED:\r\n      return { ...state, authenticated: true };\r\n    case SET_UNAUTHENTICATED:\r\n      return initialState;\r\n    case SET_USER:\r\n      return {\r\n        authenticated: true,\r\n        loading: false,\r\n        ...action.payload\r\n      };\r\n    case LOADING_USER:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case LIKE_SCREAM:\r\n      return {\r\n        ...state,\r\n        likes: [\r\n          ...state.likes,\r\n          {\r\n            userHandle: state.credentials.handle,\r\n            screamId: action.payload.screamId\r\n          }\r\n        ]\r\n      };\r\n    case UNLIKE_SCREAM:\r\n      return {\r\n        ...state,\r\n        likes: state.likes.filter(\r\n          like => like.screamId !== action.payload.screamId\r\n        )\r\n      };\r\n    case MARK_NOTIFICATIONS_READ:\r\n      state.notifications.forEach(n => {\r\n        n.read = true;\r\n      });\r\n      return { ...state };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SET_SCREAMS,\r\n  POST_SCREAM,\r\n  LOADING_DATA,\r\n  LIKE_SCREAM,\r\n  UNLIKE_SCREAM,\r\n  DELETE_SCREAM,\r\n  SUBMIT_COMMENT,\r\n  SET_SCREAM\r\n} from \"../types\";\r\nconst initialState = {\r\n  screams: [],\r\n  scream: {},\r\n  loading: false\r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOADING_DATA:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case SET_SCREAMS:\r\n      return {\r\n        ...state,\r\n        screams: action.payload,\r\n        loading: false\r\n      };\r\n    case SET_SCREAM:\r\n      return {\r\n        ...state,\r\n        scream: action.payload\r\n      };\r\n    case LIKE_SCREAM:\r\n    case UNLIKE_SCREAM:\r\n      let index = state.screams.findIndex(\r\n        scream => scream.screamId === action.payload.screamId\r\n      );\r\n      state.screams[index] = action.payload;\r\n      if (state.scream.screamId === action.payload.screamId) {\r\n        state.scream = action.payload;\r\n      }\r\n      return {\r\n        ...state\r\n      };\r\n    case SUBMIT_COMMENT:\r\n      return {\r\n        ...state,\r\n        scream: {\r\n          ...state.scream,\r\n          comments: [action.payload, ...state.scream.comments]\r\n        }\r\n      };\r\n    case DELETE_SCREAM:\r\n      return {\r\n        ...state,\r\n        screams: state.screams.filter(\r\n          scream => scream.screamId !== action.payload\r\n        )\r\n      };\r\n    case POST_SCREAM:\r\n      return {\r\n        ...state,\r\n        screams: [action.payload, ...state.screams]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SET_ERRORS,\r\n  CLEAR_ERRORS,\r\n  LOADING_UI,\r\n  STOP_LOADING_UI\r\n} from \"../types\";\r\nconst initialState = {\r\n  loading: false,\r\n  errors: null\r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_ERRORS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: action.payload\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: null\r\n      };\r\n    case LOADING_UI:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case STOP_LOADING_UI:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport userReducer from \"./reducers/userReducer\";\r\nimport dataReducer from \"./reducers/dataReducer\";\r\nimport uiReducer from \"./reducers/uiReducer\";\r\nconst initialState = {};\r\nconst middleWare = [thunk];\r\nconst reducers = combineReducers({\r\n  user: userReducer,\r\n  data: dataReducer,\r\n  UI: uiReducer\r\n});\r\nconst store = createStore(\r\n  reducers,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleWare),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\nexport default store;","export const SET_AUTHENTICATED = \"SET_AUTHENTICATED\";\r\nexport const SET_UNAUTHENTICATED = \"SET_UNAUTHENTICATED\";\r\nexport const SET_USER = \"SET_USER\";\r\nexport const LOADING_USER = \"LOADING_USER\";\r\nexport const MARK_NOTIFICATIONS_READ = \"MARK_NOTIFICATIONS_READ\";\r\nexport const SET_ERRORS = \"SET_ERRORS\";\r\nexport const LOADING_UI = \"LOADING_UI\";\r\nexport const STOP_LOADING_UI = \"STOP_LOADING_UI\";\r\nexport const LOADING_DATA = \"LOADING_DATA\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const SET_SCREAMS = \"SET_SCREAMS\";\r\nexport const SET_SCREAM = \"SET_SCREAM\";\r\nexport const LIKE_SCREAM = \"LIKE_SCREAM\";\r\nexport const UNLIKE_SCREAM = \"UNLIKE_SCREAM\";\r\nexport const DELETE_SCREAM = \"DELETE_SCREAM\";\r\nexport const POST_SCREAM = \"POST_SCREAM\";\r\nexport const SUBMIT_COMMENT = \"SUBMIT_COMMENT\";","import {\r\n  SET_USER,\r\n  SET_ERRORS,\r\n  CLEAR_ERRORS,\r\n  LOADING_UI,\r\n  LOADING_USER,\r\n  SET_UNAUTHENTICATED,\r\n  MARK_NOTIFICATIONS_READ\r\n} from \"../types\";\r\nimport axios from \"axios\";\r\nexport const logoutUser = () => dispatch => {\r\n  localStorage.removeItem(\"FBIdToken\");\r\n  delete axios.defaults.headers.common[\"Authorization\"];\r\n  dispatch({ type: SET_UNAUTHENTICATED });\r\n};\r\nexport const loginUser = (userData, history) => dispatch => {\r\n  dispatch({ type: LOADING_UI });\r\n  axios\r\n    .post(\"/login\", userData)\r\n    .then(res => {\r\n      setAuthHeader(res.data.token);\r\n      dispatch(getUserData());\r\n      dispatch({ type: CLEAR_ERRORS });\r\n      history.push(\"/\");\r\n    })\r\n    .catch(err => {\r\n      let ERD =\r\n        typeof err.response.data === \"string\"\r\n          ? { general: err.response.data }\r\n          : err.response.data;\r\n\r\n      dispatch({ type: SET_ERRORS, payload: ERD });\r\n    });\r\n};\r\nexport const signupUser = (newUserData, history) => dispatch => {\r\n  dispatch({ type: LOADING_UI });\r\n  axios\r\n    .post(\"/signup\", newUserData)\r\n    .then(res => {\r\n      setAuthHeader(res.data.token);\r\n      dispatch(getUserData());\r\n      dispatch({ type: CLEAR_ERRORS });\r\n      history.push(\"/\");\r\n    })\r\n    .catch(err => {\r\n      let ERD =\r\n        typeof err.response.data === \"string\"\r\n          ? { general: err.response.data }\r\n          : err.response.data;\r\n\r\n      dispatch({ type: SET_ERRORS, payload: ERD });\r\n    });\r\n};\r\nexport const getUserData = () => dispatch => {\r\n  dispatch({ type: LOADING_USER });\r\n  axios\r\n    .get(\"/user\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: SET_USER,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: SET_UNAUTHENTICATED });\r\n      console.log(err);\r\n    });\r\n};\r\nexport const uploadImage = formData => dispatch => {\r\n  dispatch({ type: LOADING_USER });\r\n  axios\r\n    .post(\"/user/image\", formData)\r\n    .then(() => {\r\n      dispatch(getUserData());\r\n    })\r\n    .catch(err => {\r\n      dispatch(getUserData());\r\n      console.log(err);\r\n    });\r\n};\r\nexport const editUserDetails = userDetails => dispatch => {\r\n  dispatch({ type: LOADING_USER });\r\n  axios\r\n    .post(\"/user\", userDetails)\r\n    .then(() => {\r\n      dispatch(getUserData());\r\n    })\r\n    .catch(err => {\r\n      dispatch(getUserData());\r\n      console.log(err);\r\n    });\r\n};\r\nexport const markNotificationsRead = notificationIds => dispatch => {\r\n  axios\r\n    .post(\"/notifications\", notificationIds)\r\n    .then(() => {\r\n      dispatch({ type: MARK_NOTIFICATIONS_READ });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nconst setAuthHeader = token => {\r\n  const FBIdToken = `Bearer ${token}`;\r\n  localStorage.setItem(\"FBIdToken\", FBIdToken);\r\n  axios.defaults.headers.common[\"Authorization\"] = FBIdToken;\r\n};\r\n","import {\r\n  SET_SCREAMS,\r\n  POST_SCREAM,\r\n  LOADING_UI,\r\n  STOP_LOADING_UI,\r\n  LOADING_DATA,\r\n  LIKE_SCREAM,\r\n  UNLIKE_SCREAM,\r\n  DELETE_SCREAM,\r\n  SET_ERRORS,\r\n  CLEAR_ERRORS,\r\n  SUBMIT_COMMENT,\r\n  SET_SCREAM\r\n} from \"../types\";\r\nimport axios from \"axios\";\r\nexport const getScreams = () => dispatch => {\r\n  dispatch({ type: LOADING_DATA });\r\n  axios\r\n    .get(\"/screams\")\r\n    .then(res => {\r\n      dispatch({ type: SET_SCREAMS, payload: res.data });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({ type: SET_SCREAMS, payload: [] });\r\n    });\r\n};\r\nexport const getScream = screamId => dispatch => {\r\n  dispatch({ type: LOADING_UI });\r\n  axios\r\n    .get(`/scream/${screamId}`)\r\n    .then(res => {\r\n      dispatch({ type: SET_SCREAM, payload: res.data });\r\n      dispatch({ type: STOP_LOADING_UI });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nexport const postScream = newScream => dispatch => {\r\n  dispatch({ type: LOADING_UI });\r\n  axios\r\n    .post(\"/scream\", newScream)\r\n    .then(res => {\r\n      dispatch({ type: POST_SCREAM, payload: res.data });\r\n      dispatch(clearErrors());\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: SET_ERRORS, payload: err.response.data });\r\n      console.log(err);\r\n    });\r\n};\r\nexport const likeScream = screamId => dispatch => {\r\n  axios\r\n    .get(`/scream/${screamId}/like`)\r\n    .then(res => {\r\n      dispatch({ type: LIKE_SCREAM, payload: res.data });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nexport const unlikeScream = screamId => dispatch => {\r\n  axios\r\n    .get(`/scream/${screamId}/unlike`)\r\n    .then(res => {\r\n      dispatch({ type: UNLIKE_SCREAM, payload: res.data });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nexport const submitComment = (screamId, commentData) => dispatch => {\r\n  axios\r\n    .post(`/scream/${screamId}/comment`, commentData)\r\n    .then(res => {\r\n      dispatch({ type: SUBMIT_COMMENT, payload: res.data });\r\n      dispatch(clearErrors());\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: SET_ERRORS, payload: err.response.data });\r\n      console.log(err);\r\n    });\r\n};\r\nexport const deleteScream = screamId => dispatch => {\r\n  axios\r\n    .delete(`/scream/${screamId}`)\r\n    .then(() => {\r\n      dispatch({ type: DELETE_SCREAM, payload: screamId });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nexport const getUserData = userHandle => dispatch => {\r\n  dispatch({ type: LOADING_DATA });\r\n  axios\r\n    .get(`/user/${userHandle}`)\r\n    .then(res => {\r\n      dispatch({ type: SET_SCREAMS, payload: res.data.screams });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({ type: SET_SCREAMS, payload: null });\r\n    });\r\n};\r\nexport const clearErrors = () => dispatch => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n","import React from 'react'\r\nimport { Tooltip, IconButton } from '@material-ui/core';\r\n\r\nexport default ({children, onClick, btnClassName, tipClassName, tip}) => (\r\n    <Tooltip title={tip} className={tipClassName} placement=\"top\">\r\n        <IconButton onClick={onClick} className={btnClassName}>\r\n            {children}\r\n        </IconButton>\r\n    </Tooltip>\r\n)","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { deleteScream } from \"../../redux/actions/dataActions\";\r\nimport MyButton from \"../../util/MyButton\";\r\nimport { Button, Dialog, DialogActions, DialogTitle } from \"@material-ui/core\";\r\nimport { DeleteOutline } from \"@material-ui/icons\";\r\nconst styles = {\r\n  deleteButton: {\r\n    left: \"90%\",\r\n    top: \"10%\",\r\n    position: \"absolute\"\r\n  }\r\n};\r\nexport class DeleteScream extends Component {\r\n  state = {\r\n    open: false\r\n  };\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  deleteScream = () => {\r\n    this.props.deleteScream(this.props.screamId);\r\n    this.setState({ open: false });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <MyButton\r\n          tip=\"Delete Scream\"\r\n          onClick={this.handleOpen}\r\n          btnClassName={classes.deleteButton}\r\n        >\r\n          <DeleteOutline color=\"primary\" />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <DialogTitle>\r\n            Are you sure you want to delete this scream ?\r\n          </DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              No\r\n            </Button>\r\n            <Button onClick={this.deleteScream} color=\"secondary\">\r\n              Yes\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nDeleteScream.propTypes = {\r\n  deleteScream: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  screamId: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  deleteScream\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapActionsToProps\r\n)(withStyles(styles)(DeleteScream));\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { likeScream, unlikeScream } from \"../../redux/actions/dataActions\";\r\nimport MyButton from \"../../util/MyButton\";\r\nimport { FavoriteBorder, Favorite as FavoriteIcon } from \"@material-ui/icons\";\r\nclass LikeButton extends Component {\r\n  likedScream = () => {\r\n    if (\r\n      this.props.user.likes &&\r\n      this.props.user.likes.find(like => like.screamId === this.props.screamId)\r\n    )\r\n      return true;\r\n    else return false;\r\n  };\r\n  likeScream = () => {\r\n    this.props.likeScream(this.props.screamId);\r\n  };\r\n  unlikeScream = () => {\r\n    this.props.unlikeScream(this.props.screamId);\r\n  };\r\n  render() {\r\n    const { authenticated } = this.props.user;\r\n    const likeButton = !authenticated ? (\r\n      <Link to=\"/login\">\r\n        <MyButton tip=\"Like\">\r\n          <FavoriteBorder color=\"primary\" />\r\n        </MyButton>\r\n      </Link>\r\n    ) : !this.likedScream() ? (\r\n      <MyButton tip=\"Like\" onClick={this.likeScream}>\r\n        <FavoriteBorder color=\"primary\" />\r\n      </MyButton>\r\n    ) : (\r\n      <MyButton tip=\"Unlike\" onClick={this.unlikeScream}>\r\n        <FavoriteIcon color=\"primary\" />\r\n      </MyButton>\r\n    );\r\n    return likeButton;\r\n  }\r\n}\r\nLikeButton.propTypes = {\r\n  likeScream: PropTypes.func.isRequired,\r\n  unlikeScream: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  screamId: PropTypes.string.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  likeScream,\r\n  unlikeScream\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(LikeButton);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Typography, Grid, withStyles } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nconst styles = theme => ({\r\n  ...theme.styles,\r\n  commentImage: {\r\n    width: \"100%\",\r\n    height: 100,\r\n    objectFit: \"cover\",\r\n    borderRadius: \"50%\"\r\n  },\r\n  commentData: {\r\n    marginLeft: 20\r\n  }\r\n});\r\nclass Comments extends Component {\r\n  render() {\r\n    const { comments, classes } = this.props;\r\n    return (\r\n      <Grid container>\r\n        {comments.map((comment, index) => {\r\n          const { body, createdAt, userImgUrl, userHandle } = comment;\r\n          return (\r\n            <Fragment key={createdAt}>\r\n              <Grid item sm={12}>\r\n                <Grid container>\r\n                  <Grid item sm={2}>\r\n                    <img\r\n                      src={userImgUrl}\r\n                      className={classes.commentImage}\r\n                      alt={userHandle}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item sm={9}>\r\n                    <div className={classes.commentData}>\r\n                      <Typography\r\n                        variant=\"h5\"\r\n                        component={Link}\r\n                        to={`/users/${userHandle}`}\r\n                        color=\"primary\"\r\n                      >\r\n                        {userHandle}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")}\r\n                      </Typography>\r\n                      <hr className={classes.invisibleSeparator} />\r\n                      <Typography variant=\"body1\">{body}</Typography>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              {index !== comments.length - 1 && (\r\n                <hr className={classes.visibleSeparator} />\r\n              )}\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nComments.propTypes = {\r\n  comments: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapActionsToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(Comments));\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, TextField, Grid, withStyles } from \"@material-ui/core\";\r\nimport { submitComment } from \"../../redux/actions/dataActions\";\r\nconst styles = theme => ({\r\n  ...theme.styles\r\n});\r\nclass CommentForm extends Component {\r\n  state = { body: \"\", errors: {} };\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.UI.errors) {\r\n      this.setState({ errors: nextProps.UI.errors });\r\n    }\r\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\r\n      this.setState({ body: \"\" });\r\n    }\r\n  }\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.submitComment(this.props.screamId, { body: this.state.body });\r\n  };\r\n  render() {\r\n    const { classes, authenticated } = this.props;\r\n    const errors = this.state.errors;\r\n    const commentFormMarkup = authenticated && (\r\n      <Grid item sm={12} style={{ textAlign: \"center\" }}>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <TextField\r\n            name=\"body\"\r\n            type=\"text\"\r\n            label=\"Comment on Scream\"\r\n            error={errors.comment ? true : false}\r\n            helperText={errors.comment}\r\n            onChange={this.handleChange}\r\n            fullWidth\r\n            className={classes.textField}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n          >\r\n            Comment\r\n          </Button>\r\n        </form>\r\n        <hr className={classes.visibleSeparator} />\r\n      </Grid>\r\n    );\r\n    return commentFormMarkup;\r\n  }\r\n}\r\nCommentForm.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  submitComment: PropTypes.func.isRequired,\r\n  UI: PropTypes.object.isRequired,\r\n  authenticated: PropTypes.bool.isRequired,\r\n  screamId: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  UI: state.UI,\r\n  authenticated: state.user.authenticated\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  submitComment\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(CommentForm));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { getScream, clearErrors } from \"../../redux/actions/dataActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport MyButton from \"../../util/MyButton\";\r\nimport {\r\n  UnfoldMore,\r\n  Close as CloseIcon,\r\n  Chat as ChatIcon\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  Dialog,\r\n  CircularProgress,\r\n  DialogContent,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport LikeButton from \"./LikeButton\";\r\nimport Comments from \"./Comment\";\r\nimport CommentForm from \"./CommentForm\";\r\nconst styles = theme => ({\r\n  ...theme.styles,\r\n  profileImage: {\r\n    width: 200,\r\n    height: 200,\r\n    borderRadius: \"50%\",\r\n    objectFit: \"cover\"\r\n  },\r\n  dialogContent: {\r\n    padding: 20\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    left: \"90%\"\r\n  },\r\n  expandButton: {\r\n    position: \"absolute\",\r\n    left: \"90%\"\r\n  },\r\n  spinnerDiv: {\r\n    textAlign: \"center\",\r\n    margin: \"30px 0 30px 0\"\r\n  }\r\n});\r\nclass ScreamDialog extends Component {\r\n  state = {\r\n    open: false,\r\n    oldPath: \"\",\r\n    newPath: \"\"\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.openDialog) {\r\n      this.handleOpen();\r\n    }\r\n  }\r\n  handleOpen = () => {\r\n    let oldPath = window.location.pathname;\r\n    const { userHandle, screamId } = this.props;\r\n    const newPath = `/users/${userHandle}/scream/${screamId}`;\r\n    oldPath = oldPath === newPath ? `/user/${userHandle}` : oldPath; //suspic\r\n    window.history.pushState(null, null, newPath);\r\n    this.setState({ open: true, oldPath, newPath });\r\n    this.props.getScream(this.props.screamId);\r\n  };\r\n  handleClose = () => {\r\n    window.history.pushState(null, null, this.state.oldPath);\r\n    this.setState({ open: false });\r\n    this.props.clearErrors();\r\n  };\r\n  render() {\r\n    const {\r\n      classes,\r\n      scream: {\r\n        screamId,\r\n        body,\r\n        userHandle,\r\n        createdAt,\r\n        likeCount,\r\n        commentCount,\r\n        userImgUrl,\r\n        comments\r\n      },\r\n      UI: { loading }\r\n    } = this.props;\r\n    const dialogMarkup = loading ? (\r\n      <div className={classes.spinnerDiv}>\r\n        <CircularProgress thickness={2} size={200} />\r\n      </div>\r\n    ) : (\r\n      <Grid container spacing={16}>\r\n        <Grid item sm={5}>\r\n          <img\r\n            src={userImgUrl}\r\n            alt={userHandle}\r\n            className={classes.profileImage}\r\n          />\r\n        </Grid>\r\n        <Grid item sm={7}>\r\n          <Typography\r\n            component={Link}\r\n            to={`/users/${userHandle}`}\r\n            variant=\"h5\"\r\n            color=\"primary\"\r\n          >\r\n            @{userHandle}\r\n          </Typography>\r\n          <hr className={classes.invisibleSeparator} />\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")}\r\n          </Typography>\r\n          <hr className={classes.invisibleSeparator} />\r\n          <Typography variant=\"body1\">{body}</Typography>\r\n          <LikeButton screamId={screamId} />\r\n          <span>{likeCount} Likes</span>\r\n          <MyButton tip=\"Comments\">\r\n            <ChatIcon color=\"primary\" />\r\n          </MyButton>\r\n          <span>{commentCount} Comments</span>\r\n        </Grid>\r\n        <hr className={classes.visibleSeparator} />\r\n        <CommentForm screamId={screamId} />\r\n        <Comments comments={comments} />\r\n      </Grid>\r\n    );\r\n    return (\r\n      <Fragment>\r\n        <MyButton\r\n          tip=\"View Scream\"\r\n          onClick={this.handleOpen}\r\n          btnClassName={classes.expandButton}\r\n        >\r\n          <UnfoldMore color=\"primary\" />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <MyButton\r\n            tip=\"Close\"\r\n            onClick={this.handleClose}\r\n            btnClassName={classes.closeButton}\r\n          >\r\n            <CloseIcon />\r\n          </MyButton>\r\n          <DialogContent className={classes.dialogContent}>\r\n            {dialogMarkup}\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nScreamDialog.propTypes = {\r\n  getScream: PropTypes.func.isRequired,\r\n  clearErrors: PropTypes.func.isRequired,\r\n  screamId: PropTypes.string.isRequired,\r\n  userHandle: PropTypes.string.isRequired,\r\n  scream: PropTypes.object.isRequired,\r\n  UI: PropTypes.object.isRequired,\r\n  openDialog: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  scream: state.data.scream,\r\n  UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  getScream,\r\n  clearErrors\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(ScreamDialog));\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport DeleteScream from \"./DeleteScream\";\r\nimport ScreamDialog from \"./ScreamDialog\";\r\nimport MyButton from \"../../util/MyButton\";\r\n//MUI Stuff\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport { Chat as ChatIcon } from \"@material-ui/icons\";\r\nimport LikeButton from \"./LikeButton\";\r\nconst styles = {\r\n  card: {\r\n    display: \"flex\",\r\n    marginBottom: 20,\r\n    position: \"relative\"\r\n  },\r\n  content: {\r\n    padding: 25,\r\n    objectFit: \"cover\"\r\n  },\r\n  image: {\r\n    minWidth: 200\r\n  }\r\n};\r\nclass Scream extends Component {\r\n  render() {\r\n    dayjs.extend(relativeTime);\r\n    const {\r\n      user: {\r\n        authenticated,\r\n        credentials: { handle }\r\n      },\r\n      classes,\r\n      scream: {\r\n        body,\r\n        screamId,\r\n        likeCount,\r\n        commentCount,\r\n        createdAt,\r\n        userHandle,\r\n        userImgUrl\r\n      }\r\n    } = this.props;\r\n\r\n    const deleteButton =\r\n      authenticated && userHandle === handle ? (\r\n        <DeleteScream screamId={screamId} />\r\n      ) : null;\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardMedia\r\n          image={userImgUrl}\r\n          title=\"Profile Image\"\r\n          className={classes.image}\r\n        />\r\n        <CardContent className={classes.content}>\r\n          <Typography\r\n            variant=\"h5\"\r\n            component={Link}\r\n            to={`/users/${userHandle}`}\r\n            color=\"primary\"\r\n          >\r\n            {userHandle}\r\n          </Typography>\r\n          {deleteButton}\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {dayjs(createdAt).fromNow()}\r\n          </Typography>\r\n          <Typography variant=\"body1\">{body}</Typography>\r\n          <LikeButton screamId={screamId} />\r\n          <span>{likeCount} Likes</span>\r\n          <MyButton tip=\"Comments\">\r\n            <ChatIcon color=\"primary\" />\r\n          </MyButton>\r\n          <span>{commentCount} Comments</span>\r\n          <ScreamDialog screamId={screamId} userHandle={userHandle} openDialog={this.props.openDialog} />\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nScream.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  scream: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  openDialog: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\nexport default connect(\r\n  mapStateToProps\r\n)(withStyles(styles)(Scream));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport MyButton from \"../../util/MyButton\";\r\nimport {\r\n  Button,\r\n  withStyles,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport { editUserDetails } from \"../../redux/actions/userActions\";\r\nimport { Edit as EditIcon } from \"@material-ui/icons\";\r\n\r\nconst styles = theme => ({\r\n  ...theme.styles,\r\n  button: {\r\n    float: \"right\"\r\n  }\r\n});\r\nclass EditDetails extends Component {\r\n  state = {\r\n    bio: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    open: false\r\n  };\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n    this.mapUserDetailsToState(this.props.credentials);\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = () => {\r\n    const userDetails = {\r\n      bio: this.state.bio,\r\n      website: this.state.website,\r\n      location: this.state.location\r\n    };\r\n    this.props.editUserDetails(userDetails);\r\n    this.handleClose();\r\n  };\r\n  componentDidMount() {\r\n    const { credentials } = this.props;\r\n    this.mapUserDetailsToState(credentials);\r\n  }\r\n  mapUserDetailsToState(credentials) {\r\n    this.setState({\r\n      bio: credentials.bio ? credentials.bio : \"\",\r\n      website: credentials.website ? credentials.website : \"\",\r\n      location: credentials.location ? credentials.location : \"\"\r\n    });\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <MyButton\r\n          tip=\"Edit Details\"\r\n          onClick={this.handleOpen}\r\n          btnClassName={classes.button}\r\n        >\r\n          <EditIcon color=\"primary\" />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <DialogTitle>Edit your details</DialogTitle>\r\n          <DialogContent>\r\n            <form>\r\n              <TextField\r\n                name=\"bio\"\r\n                type=\"text\"\r\n                label=\"Bio\"\r\n                multiline\r\n                rows=\"3\"\r\n                placeholder=\"A shot bio about yourself\"\r\n                className={classes.textField}\r\n                value={this.state.bio}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                name=\"website\"\r\n                type=\"url\"\r\n                label=\"Website\"\r\n                fullWidth\r\n                placeholder=\"http://website.com\"\r\n                className={classes.textField}\r\n                value={this.state.website}\r\n                onChange={this.handleChange}\r\n              />\r\n              <TextField\r\n                name=\"location\"\r\n                type=\"text\"\r\n                label=\"Location\"\r\n                fullWidth\r\n                placeholder=\"Lagos, NG\"\r\n                className={classes.textField}\r\n                value={this.state.location}\r\n                onChange={this.handleChange}\r\n              />\r\n            </form>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleSubmit} color=\"primary\">\r\n              Save\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nEditDetails.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  editUserDetails: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  credentials: state.user.credentials\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  editUserDetails\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(EditDetails));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport NoImg from \"../images/no-img.png\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport {\r\n  LocationOn,\r\n  Link as LinkIcon,\r\n  CalendarToday\r\n} from \"@material-ui/icons\";\r\nconst styles = theme => ({\r\n  ...theme.styles,\r\n  handle:{\r\n      height:20,\r\n      backgroundColor: theme.palette.primary.main,\r\n      width: 60,\r\n      margin: \"0 auto 7px auto\"\r\n  },\r\n  fullLine: {\r\n    height: 15,\r\n    width: \"90%\",\r\n    backgroundColor: \"rgba(0,0,0,0.6)\",\r\n    margin: \"0 auto 10px auto\"\r\n  },\r\n});\r\nconst ProfileSkeleton = props => {\r\n  const { classes } = props;\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <div className={classes.profile}>\r\n        <div className=\"image-wrapper\">\r\n          <img src={NoImg} alt=\"profile\" className=\"profile-image\" />\r\n        </div>\r\n        <hr />\r\n        <div className=\"profile-details\">\r\n          <div className={classes.handle} />\r\n          <hr />\r\n          <div className={classes.fullLine} />\r\n          <div className={classes.fullLine} />\r\n          <hr />\r\n          <LocationOn color=\"primary\" />\r\n          <span>Location</span>\r\n          <hr />\r\n          <LinkIcon color=\"primary\" />\r\n          http:website.com\r\n          <hr />\r\n          <CalendarToday color=\"primary\" />\r\n          <span>Joined Date</span>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nProfileSkeleton.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ProfileSkeleton);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport dayjs from \"dayjs\";\r\nimport { uploadImage, logoutUser } from \"../../redux/actions/userActions\";\r\nimport EditDetails from \"./EditDetails\";\r\nimport MyButton from \"../../util/MyButton\";\r\nimport ProfileSkeleton from \"../../util/ProfileSkeleton\";\r\n//MUI Stuffs\r\nimport { Button, Paper, Link as MuiLink, Typography } from \"@material-ui/core\";\r\n//Icons\r\nimport {\r\n  LocationOn,\r\n  Link as LinkIcon,\r\n  CalendarToday,\r\n  Edit as EditIcon,\r\n  KeyboardReturn\r\n} from \"@material-ui/icons\";\r\nconst styles = theme=>({\r\n  ...theme.styles\r\n});\r\nclass Profile extends Component {\r\n  handleImageChange = e => {\r\n    const image = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", image, image.name);\r\n    this.props.uploadImage(formData);\r\n  };\r\n  handleEditPicture = () => {\r\n    const fileInput = document.getElementById(\"imageInput\");\r\n    fileInput.click();\r\n  };\r\n  handleLogout = () => {\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    const {\r\n      classes,\r\n      user: {\r\n        credentials: { handle, createdAt, imgUrl, bio, location, website },\r\n        loading,\r\n        authenticated\r\n      }\r\n    } = this.props;\r\n    let profileMarkup = !loading ? (\r\n      authenticated ? (\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.profile}>\r\n            <div className=\"image-wrapper\">\r\n              <img src={imgUrl} alt={handle} className=\"profile-image\" />\r\n              <input\r\n                type=\"file\"\r\n                id=\"imageInput\"\r\n                hidden=\"hidden\"\r\n                onChange={this.handleImageChange}\r\n              />\r\n              <MyButton\r\n                tip=\"Edit Profile Picture\"\r\n                onClick={this.handleEditPicture}\r\n                btnClassName=\"button\"\r\n              >\r\n                <EditIcon color=\"primary\" />\r\n              </MyButton>\r\n            </div>\r\n            <hr />\r\n            <div className=\"profile-details\">\r\n              <MuiLink\r\n                component={Link}\r\n                to={`/users/${handle}`}\r\n                color=\"primary\"\r\n                variant=\"h5\"\r\n              >\r\n                @{handle}\r\n              </MuiLink>\r\n              <hr />\r\n              {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n              <hr />\r\n              {location && (\r\n                <Fragment>\r\n                  <LocationOn color=\"primary\" /> <span>{location}</span>\r\n                  <hr />\r\n                </Fragment>\r\n              )}\r\n              {website && (\r\n                <Fragment>\r\n                  <LinkIcon color=\"primary\" />\r\n                  <a target=\"_blank\" href={website} rel=\"noopener noreferrer\">\r\n                    {\" \"}\r\n                    {website}\r\n                  </a>\r\n                  <hr />\r\n                </Fragment>\r\n              )}\r\n              <CalendarToday color=\"primary\" />\r\n              <span>Joined {dayjs(createdAt).format(\"MMM YYYY\")}</span>\r\n            </div>\r\n            <MyButton tip=\"Logout\" onClick={this.handleLogout}>\r\n              <KeyboardReturn color=\"primary\" />\r\n            </MyButton>\r\n            <EditDetails />\r\n          </div>\r\n        </Paper>\r\n      ) : (\r\n        <Paper className={classes.paper}>\r\n          <Typography variant=\"body2\" align=\"center\">\r\n            No Profile Found, please login\r\n          </Typography>\r\n          <div className={classes.buttons}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component={Link}\r\n              to=\"/login\"\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              component={Link}\r\n              to=\"/signup\"\r\n            >\r\n              Signup\r\n            </Button>\r\n          </div>\r\n        </Paper>\r\n      )\r\n    ) : (\r\n      <ProfileSkeleton />\r\n    );\r\n    return profileMarkup;\r\n  }\r\n}\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  uploadImage: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\nconst mapActionsToProps = {\r\n  uploadImage,\r\n  logoutUser\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(Profile));\r\n","import React, { Fragment } from \"react\";\r\nimport NoImg from \"../images/no-img.png\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, CardMedia, CardContent } from \"@material-ui/core\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nconst styles = {\r\n  card: {\r\n    display: \"flex\",\r\n    marginBottom: 20\r\n  },\r\n  cardContent: {\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    padding: 25\r\n  },\r\n  cover: {\r\n    minWidth: 200,\r\n    objectFit: \"cover\"\r\n  },\r\n  handle: {\r\n    width: 60,\r\n    height: 18,\r\n    backgroundColor: \"#bf360c\",\r\n    marginBottom: 7\r\n  },\r\n  date: {\r\n    height: 14,\r\n    width: 100,\r\n    backgroundColor: \"rgba(0,0,0,0.3)\",\r\n    marginBottom: 10\r\n  },\r\n  fullLine: {\r\n    height: 15,\r\n    width: \"90%\",\r\n    backgroundColor: \"rgba(0,0,0,0.6)\",\r\n    marginBottom: 10\r\n  },\r\n  halfLine: {\r\n    height: 15,\r\n    width: \"50%\",\r\n    backgroundColor: \"rgba(0,0,0,0.6)\",\r\n    marginBottom: 10\r\n  }\r\n};\r\nconst ScreamSkeleton = props => {\r\n  const { classes } = props;\r\n  const screamSkeleton = Array.from({ length: 3 }).map(i => (\r\n    <Fragment>\r\n      <Card className={classes.card} key={Math.random()}>\r\n        <CardMedia className={classes.cover} image={NoImg} />\r\n        <CardContent className={classes.cardContent}>\r\n          <div className={classes.handle} />\r\n          <div className={classes.date} />\r\n          <div className={classes.fullLine} />\r\n          <div className={classes.fullLine} />\r\n          <div className={classes.halfLine} />\r\n        </CardContent>\r\n      </Card>\r\n    </Fragment>\r\n  ));\r\n  return screamSkeleton;\r\n};\r\nScreamSkeleton.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\nexport default withStyles(styles)(ScreamSkeleton);\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Scream from \"../components/scream/Scream\";\r\nimport Profile from \"../components/profile/Profile\";\r\nimport ScreamSkeleton from \"../util/ScreamSkeleton\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getScreams } from \"../redux/actions/dataActions\";\r\nclass home extends Component {\r\n  componentDidMount() {\r\n    this.props.getScreams();\r\n  }\r\n  render() {\r\n    const { screams, loading } = this.props.data;\r\n    let recentScreamsMarkup = !loading ? (\r\n      screams.map(scream => (\r\n        <Scream scream={scream} key={scream.screamId}></Scream>\r\n      ))\r\n    ) : (\r\n      <ScreamSkeleton />\r\n    );\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item sm={8} xs={12}>\r\n          {recentScreamsMarkup}\r\n        </Grid>\r\n        <Grid item sm={4} xs={12}>\r\n          <Profile />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nhome.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  getScreams: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.data\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  getScreams\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(home);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Logo from \"../images/logo.jpg\";\r\n\r\n//MUI Stuffs\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\n//Redux stuff\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../redux/actions/userActions\";\r\nconst styles = theme => ({\r\n  ...theme.styles\r\n});\r\nclass login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    nextProps.UI.errors && this.setState({ errors: nextProps.UI.errors });\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const userData = { email: this.state.email, password: this.state.password };\r\n    this.props.loginUser(userData, this.props.history);\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  render() {\r\n    const {\r\n      classes,\r\n      UI: { loading }\r\n    } = this.props;\r\n    const { errors, email, password } = this.state;\r\n    return (\r\n      <Grid container className={classes.form}>\r\n        <Grid item sm />\r\n        <Grid item sm>\r\n          <img src={Logo} alt=\"Social Monster\" className={classes.image} />\r\n          <Typography variant=\"h1\" className={classes.pageTitle}>\r\n            Login\r\n          </Typography>\r\n          <form noValidate onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              helperText={errors.email}\r\n              error={errors.email ? true : false}\r\n              className={classes.textField}\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextField\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              fullWidth\r\n              label=\"Password\"\r\n              helperText={errors.password}\r\n              error={errors.password ? true : false}\r\n              className={classes.textField}\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n            {errors.general && (\r\n              <Typography variant=\"body2\" className={classes.customError}>\r\n                {errors.general}\r\n              </Typography>\r\n            )}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled={loading}\r\n            >\r\n              Login\r\n              {loading && (\r\n                <CircularProgress className={classes.progress} size={30} />\r\n              )}\r\n            </Button>\r\n            <br />\r\n            <small>\r\n              Don't have an account? <Link to=\"/signup\">Signup Here</Link>\r\n            </small>\r\n          </form>\r\n        </Grid>\r\n        <Grid item sm />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nlogin.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  loginUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  UI: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  user: state.user,\r\n  UI: state.UI\r\n});\r\nconst mapActionsToProps = {\r\n  loginUser\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(login));\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Logo from \"../images/logo.jpg\";\r\n\r\n//MUI Stuffs\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\n//Redux stuff\r\nimport { connect } from \"react-redux\";\r\nimport { signupUser } from \"../redux/actions/userActions\";\r\n\r\nconst styles = theme => ({\r\n  ...theme.styles\r\n});\r\nclass signup extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      handle: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    nextProps.UI.errors && this.setState({ errors: nextProps.UI.errors });\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    const newUserData = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n      handle: this.state.handle\r\n    };\r\n    this.props.signupUser(newUserData, this.props.history);\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  render() {\r\n    const {\r\n      classes,\r\n      UI: { loading }\r\n    } = this.props;\r\n    const { errors, email, password, handle, confirmPassword } = this.state;\r\n    return (\r\n      <Grid container className={classes.form}>\r\n        <Grid item sm />\r\n        <Grid item sm>\r\n          <img src={Logo} alt=\"Social Monster\" className={classes.image} />\r\n          <Typography variant=\"h1\" className={classes.pageTitle}>\r\n            Signup\r\n          </Typography>\r\n          <form noValidate onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              id=\"handle\"\r\n              name=\"handle\"\r\n              type=\"text\"\r\n              fullWidth\r\n              label=\"Handle\"\r\n              helperText={errors.handle}\r\n              error={errors.handle ? true : false}\r\n              className={classes.textField}\r\n              value={handle}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextField\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              fullWidth\r\n              label=\"Email\"\r\n              helperText={errors.email}\r\n              error={errors.email ? true : false}\r\n              className={classes.textField}\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextField\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              fullWidth\r\n              label=\"Password\"\r\n              helperText={errors.password}\r\n              error={errors.password ? true : false}\r\n              className={classes.textField}\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextField\r\n              id=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              type=\"password\"\r\n              fullWidth\r\n              label=\"Confirm Password\"\r\n              helperText={errors.confirmPassword}\r\n              error={errors.confirmPassword ? true : false}\r\n              className={classes.textField}\r\n              value={confirmPassword}\r\n              onChange={this.handleChange}\r\n            />\r\n            {errors.general && (\r\n              <Typography variant=\"body2\" className={classes.customError}>\r\n                {errors.general}\r\n              </Typography>\r\n            )}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled={loading}\r\n            >\r\n              Signup\r\n              {loading && (\r\n                <CircularProgress className={classes.progress} size={30} />\r\n              )}\r\n            </Button>\r\n            <br />\r\n            <small>\r\n              Already have an account? <Link to=\"/login\">Login Here</Link>\r\n            </small>\r\n          </form>\r\n        </Grid>\r\n        <Grid item sm />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nsignup.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  signupUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  UI: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  user: state.user,\r\n  UI: state.UI\r\n});\r\nconst mapActionsToProps = {\r\n  signupUser\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(signup));\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport dayjs from \"dayjs\";\r\n//MUI Stuffs\r\nimport { Paper, Link as MuiLink, Typography } from \"@material-ui/core\";\r\n//Icons\r\nimport {\r\n  LocationOn,\r\n  Link as LinkIcon,\r\n  CalendarToday\r\n} from \"@material-ui/icons\";\r\nconst styles = theme => ({\r\n  ...theme.styles\r\n});\r\nconst StaticProfile = props => {\r\n  const {\r\n    classes,\r\n    profile: { handle, imgUrl, createdAt, bio, website, location }\r\n  } = props;\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <div className={classes.profile}>\r\n        <div className=\"image-wrapper\">\r\n          <img src={imgUrl} alt={handle} className=\"profile-image\" />\r\n        </div>\r\n        <hr />\r\n        <div className=\"profile-details\">\r\n          <MuiLink\r\n            component={Link}\r\n            to={`/users/${handle}`}\r\n            color=\"primary\"\r\n            variant=\"h5\"\r\n          >\r\n            @{handle}\r\n          </MuiLink>\r\n          <hr />\r\n          {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n          <hr />\r\n          {location && (\r\n            <Fragment>\r\n              <LocationOn color=\"primary\" /> <span>{location}</span>\r\n              <hr />\r\n            </Fragment>\r\n          )}\r\n          {website && (\r\n            <Fragment>\r\n              <LinkIcon color=\"primary\" />\r\n              <a target=\"_blank\" href={website} rel=\"noopener noreferrer\">\r\n                {\" \"}\r\n                {website}\r\n              </a>\r\n              <hr />\r\n            </Fragment>\r\n          )}\r\n          <CalendarToday color=\"primary\" />\r\n          <span>Joined {dayjs(createdAt).format(\"MMM YYYY\")}</span>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nStaticProfile.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(StaticProfile);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { getUserData } from \"../redux/actions/dataActions\";\r\nimport ScreamSkeleton from \"../util/ScreamSkeleton\";\r\nimport ProfileSkeleton from \"../util/ProfileSkeleton\";\r\nimport Scream from \"../components/scream/Scream\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport StaticProfile from \"../components/profile/StaticProfile\";\r\nclass user extends Component {\r\n  state = { profile: null, screamIdParam: null };\r\n  componentDidMount(nextProps) {\r\n    const handle = this.props.match.params.handle;\r\n    const screamId = this.props.match.params.screamId;\r\n    if (screamId) {\r\n      this.setState({ screamIdParam: screamId });\r\n    }\r\n    this.props.getUserData(handle);\r\n    axios\r\n      .get(`/user/${handle}`)\r\n      .then(res => {\r\n        this.setState({\r\n          profile: res.data.user\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  render() {\r\n    const { screams, loading } = this.props.data;\r\n    const { screamIdParam } = this.state;\r\n    const screamsMarkup = loading ? (\r\n      <ScreamSkeleton />\r\n    ) : screams === null ? (\r\n      <p>No screams from this user</p>\r\n    ) : !screamIdParam ? (\r\n      screams.map(scream => <Scream key={scream.screamId} scream={scream} />)\r\n    ) : (\r\n      screams.map(scream => {\r\n        if (scream.screamId !== screamIdParam)\r\n          return <Scream key={scream.screamId} scream={scream} />;\r\n        else return <Scream key={scream.screamId} scream={scream} openDialog />;\r\n      })\r\n    );\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item sm={8} xs={12}>\r\n          {screamsMarkup}\r\n        </Grid>\r\n        <Grid item sm={4} xs={12}>\r\n          {this.state.profile === null ? (\r\n            <ProfileSkeleton />\r\n          ) : (\r\n            <StaticProfile profile={this.state.profile} />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nuser.propTypes = {\r\n  getUserData: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.data\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  getUserData\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(user);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n  Tooltip,\r\n  Typography,\r\n  Badge\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Notifications as NotificationsIcon,\r\n  Favorite as FavoriteIcon,\r\n  Chat as ChatIcon\r\n} from \"@material-ui/icons\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport { markNotificationsRead } from \"../../redux/actions/userActions\";\r\nclass Notifications extends Component {\r\n  state = {\r\n    anchorEl: null\r\n  };\r\n  handleOpen = e => {\r\n    this.setState({ anchorEl: e.target });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n  onMenuOpened = () => {\r\n    let unreadNotificationIds = this.props.notifications\r\n      .filter(n => !n.read)\r\n      .map(n => n.notificationId);\r\n    this.props.markNotificationsRead(unreadNotificationIds);\r\n  };\r\n  render() {\r\n    const notifications = this.props.notifications;\r\n    const anchorEl = this.state.anchorEl;\r\n    dayjs.extend(relativeTime);\r\n    let notificationsIcon;\r\n    if (notifications && notifications.length > 0) {\r\n      notifications.filter(n => n.read === false).length > 0\r\n        ? (notificationsIcon = (\r\n            <Badge\r\n              badgeContent={notifications.filter(n => n.read === false).length}\r\n              color=\"secondary\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          ))\r\n        : (notificationsIcon = <NotificationsIcon />);\r\n    } else {\r\n      notificationsIcon = <NotificationsIcon />;\r\n    }\r\n    let notificationsMarkUp =\r\n      notifications && notifications.length > 0 ? (\r\n        notifications.map(n => {\r\n          const verb = n.type === \"like\" ? \"liked\" : \"commented on\";\r\n          const time = dayjs(n.createdAt).fromNow();\r\n          const iconColor = n.read ? \"primary\" : \"secondary\";\r\n          const icon =\r\n            n.type === \"like\" ? (\r\n              <FavoriteIcon color={iconColor} style={{ marginRight: 10 }} />\r\n            ) : (\r\n              <ChatIcon color={iconColor} style={{ marginRight: 10 }} />\r\n            );\r\n          return (\r\n            <MenuItem key={n.createdAt} onClick={this.handleClose}>\r\n              {icon}\r\n              <Typography\r\n                component={Link}\r\n                color=\"default\"\r\n                variant=\"body1\"\r\n                to={`/users/${n.recipient}/scream/${n.screamId}`}\r\n              >\r\n                {n.sender} {verb} your scream {time}\r\n              </Typography>\r\n            </MenuItem>\r\n          );\r\n        })\r\n      ) : (\r\n        <MenuItem onClick={this.handleClose}>You have no notification</MenuItem>\r\n      );\r\n    return (\r\n      <Fragment>\r\n        <Tooltip placement=\"top\" title=\"Notifications\">\r\n          <IconButton\r\n            aria-owns={anchorEl ? \"simple-menu\" : undefined}\r\n            aria-haspopup=\"true\"\r\n            onClick={this.handleOpen}\r\n          >\r\n            {notificationsIcon}\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Menu\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={this.handleClose}\r\n          onEntered={this.onMenuOpened}\r\n        >\r\n          {notificationsMarkUp}\r\n        </Menu>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nNotifications.propTypes = {\r\n  markNotificationsRead: PropTypes.func.isRequired,\r\n  notifications: PropTypes.array.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  notifications: state.user.notifications\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  markNotificationsRead\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(Notifications);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { postScream, clearErrors } from \"../../redux/actions/dataActions\";\r\nimport MyButton from \"../../util/MyButton\";\r\nimport { Add as AddIcon, Close as CloseIcon } from \"@material-ui/icons\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  CircularProgress,\r\n  DialogTitle,\r\n  TextField,\r\n  DialogContent\r\n} from \"@material-ui/core\";\r\nconst styles = theme => ({\r\n  ...theme.styles,\r\n  submitButton: {\r\n    position: \"relative\",\r\n    float: \"right\",\r\n    marginTop: 10\r\n  },\r\n  progressSpinner: {\r\n    position: \"absolute\"\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    top: \"6%\",\r\n    left: \"91%\"\r\n  }\r\n});\r\nclass PostScream extends Component {\r\n  state = { open: false, body: \"\", errors: {} };\r\n  componentWillReceiveProps(nextProps) {\r\n    nextProps.UI.errors && this.setState({ errors: nextProps.UI.errors });\r\n    !nextProps.UI.errors &&\r\n      !nextProps.UI.loading &&\r\n      this.setState({ open: false, body: \"\", errors: {} });\r\n  }\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n  handleClose = () => {\r\n    this.props.clearErrors();\r\n    this.setState({ open: false, body: \"\", errors: {} });\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const newScream = {\r\n      body: this.state.body\r\n    };\r\n    this.props.postScream(newScream);\r\n  };\r\n  render() {\r\n    const { errors } = this.state;\r\n    const {\r\n      classes,\r\n      UI: { loading }\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <MyButton tip=\"Post New Scream!\" onClick={this.handleOpen}>\r\n          <AddIcon />\r\n        </MyButton>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          fullWidth\r\n          maxWidth=\"sm\"\r\n        >\r\n          <MyButton\r\n            tip=\"Close\"\r\n            onClick={this.handleClose}\r\n            btnClassName={classes.closeButton}\r\n          >\r\n            <CloseIcon />\r\n          </MyButton>\r\n          <DialogTitle>Post New Scream</DialogTitle>\r\n          <DialogContent>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <TextField\r\n                name=\"body\"\r\n                type=\"text\"\r\n                label=\"Scream!!!\"\r\n                placeholder=\"Scream at your fellow monsters\"\r\n                multiline\r\n                fullWidth\r\n                error={errors.body ? true : false}\r\n                helperText={errors.body}\r\n                rows=\"3\"\r\n                onChange={this.handleChange}\r\n                className={classes.textField}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submitButton}\r\n                disabled={loading}\r\n              >\r\n                Scream\r\n                {loading && (\r\n                  <CircularProgress\r\n                    className={classes.progressSpinner}\r\n                    size={30}\r\n                  />\r\n                )}\r\n              </Button>\r\n            </form>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nPostScream.propTypes = {\r\n  postScream: PropTypes.func.isRequired,\r\n  clearErrors: PropTypes.func.isRequired,\r\n  UI: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  postScream,\r\n  clearErrors\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(PostScream));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport MyButton from \"../../util/MyButton\";\r\nimport Notifications from \"./Notifications\";\r\nimport PostScream from \"../scream/PostScream\";\r\n//MUI Stuff\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Home as HomeIcon } from \"@material-ui/icons\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const { authenticated } = this.props;\r\n    return (\r\n      <AppBar>\r\n        <Toolbar className=\"nav-container\">\r\n          {authenticated ? (\r\n            <Fragment>\r\n              <PostScream />\r\n              <Link to=\"/\">\r\n                <MyButton tip=\"Home\">\r\n                  <HomeIcon />\r\n                </MyButton>\r\n              </Link>\r\n              <Notifications />\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <Button color=\"inherit\" component={Link} to=\"/login\">\r\n                Login\r\n              </Button>\r\n              <Button color=\"inherit\" component={Link} to=\"/\">\r\n                Home\r\n              </Button>\r\n              <Button color=\"inherit\" component={Link} to=\"/signup\">\r\n                Signup\r\n              </Button>\r\n            </Fragment>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\nNavbar.propTypes = {\r\n  authenticated: PropTypes.bool.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  authenticated: state.user.authenticated\r\n});\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      authenticated === true ? <Redirect to=\"/\" /> : <Component {...props} />\r\n    }\r\n  />\r\n);\r\nAuthRoute.propTypes = {\r\n  user: PropTypes.object\r\n};\r\nconst mapStateToProps = state => ({\r\n  authenticated: state.user.authenticated\r\n});\r\nexport default connect(mapStateToProps)(AuthRoute);\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport jwtDecode from \"jwt-decode\";\r\n//Redux\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { logoutUser, getUserData} from \"./redux/actions/userActions\";\r\n//Pages\r\nimport home from \"./pages/home\";\r\nimport login from \"./pages/login\";\r\nimport signup from \"./pages/signup\";\r\nimport user from \"./pages/user\";\r\n\r\n//Components\r\nimport Navbar from \"./components/layout/Navbar\";\r\n//Util\r\nimport themeObject from \"./util/theme\";\r\nimport AuthRoute from \"./util/AuthRoute\";\r\nimport Axios from \"axios\";\r\n\r\nconst theme = createMuiTheme(themeObject);\r\nAxios.defaults.baseURL = \"https://europe-west1-socialmonster-b9de3.cloudfunctions.net/api\";\r\nconst token = localStorage.FBIdToken;\r\nif (token) {\r\n  const decodedToken = jwtDecode(token);\r\n  if (decodedToken.exp * 1000 < Date.now()) {\r\n    store.dispatch(logoutUser());\r\n    window.location.href = \"/login\";\r\n  } else {\r\n    store.dispatch(getUserData());\r\n    Axios.defaults.headers.common['Authorization'] = token;\r\n  }\r\n}\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    store.dispatch(getUserData());\r\n    Axios.defaults.headers.common['Authorization'] = token;\r\n  }\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <Provider store={store}>\r\n          <Router>\r\n            <Navbar />\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={home} />\r\n                <AuthRoute\r\n                  exact\r\n                  path=\"/login\"\r\n                  component={login}\r\n                />\r\n                <AuthRoute\r\n                  exact\r\n                  path=\"/signup\"\r\n                  component={signup}\r\n                />\r\n                <Route exact path=\"/users/:handle\" component={user} />\r\n                <Route exact path=\"/users/:handle/scream/:screamId\" component={user} />\r\n              </Switch>\r\n            </div>\r\n          </Router>\r\n        </Provider>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export default {\r\n  palette: {\r\n    primary: {\r\n      main: \"#bf360c\",\r\n      light: \"#cb5e3c\",\r\n      dark: \"#852508\",\r\n      contrastText: \"#ffffff\"\r\n    },\r\n    secondary: {\r\n      main: \"#BF0C3B\",\r\n      light: \"#cb3c62\",\r\n      dark: \"#850829\",\r\n      contrastText: \"#ffffff\"\r\n    }\r\n  },\r\n  styles: {\r\n    paper: {\r\n      padding: 20\r\n    },\r\n    profile: {\r\n      \"& .image-wrapper\": {\r\n        textAlign: \"center\",\r\n        position: \"relative\",\r\n        \"& button\": {\r\n          position: \"absolute\",\r\n          top: \"80%\",\r\n          left: \"70%\"\r\n        }\r\n      },\r\n      \"& .profile-image\": {\r\n        width: 200,\r\n        height: 200,\r\n        objectFit: \"cover\",\r\n        maxWidth: \"100%\",\r\n        borderRadius: \"50%\"\r\n      },\r\n      \"& .profile-details\": {\r\n        textAlign: \"center\",\r\n        \"& span, svg\": {\r\n          verticalAlign: \"middle\"\r\n        },\r\n        \"& a\": {\r\n          color: \"#bf360c\"\r\n        }\r\n      },\r\n      \"& hr\": {\r\n        border: \"none\",\r\n        margin: \"0 0 10px 0\"\r\n      },\r\n      \"& svg.button\": {\r\n        \"&:hover\": {\r\n          cursor: \"pointer\"\r\n        }\r\n      }\r\n    },\r\n    buttons: {\r\n      textAlign: \"center\",\r\n      \"& a\": {\r\n        margin: \"20px 10px\"\r\n      }\r\n    },\r\n    form: {\r\n      textAlign: \"center\"\r\n    },\r\n    image: {\r\n      width: 65,\r\n      height: \"auto\",\r\n      margin: \"20px auto\"\r\n    },\r\n    pageTitle: {\r\n      fontSize: 48,\r\n      fontWeight: \"400\",\r\n      margin: \"10px auto\"\r\n    },\r\n    textField: {\r\n      margin: \"10px auto\"\r\n    },\r\n    button: {\r\n      marginTop: 20,\r\n      position: \"relative\"\r\n    },\r\n    customError: {\r\n      color: \"red\",\r\n      fontSize: \"0.8rem\",\r\n      marginTop: 10\r\n    },\r\n    progress: {\r\n      position: \"absolute\"\r\n    },\r\n    invisibleSeparator: {\r\n      border: \"none\",\r\n      margin: 4\r\n    },\r\n    visibleSeparator: {\r\n      width: \"100%\",\r\n      borderBottom: \"1px solid rgba(0,0,0,0.1)\",\r\n      marginBottom: 20\r\n    }\r\n  }\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/no-img.f473a349.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.54c93b83.jpg\";"],"sourceRoot":""}